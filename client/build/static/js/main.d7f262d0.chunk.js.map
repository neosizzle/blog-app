{"version":3,"sources":["api/index.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","actions/posts.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","images/logo.png","styles.js","App.js","reducers/index.js","reducers/posts.js","index.js","constants/actionTypes.js"],"names":["url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","post","setCurrentId","classes","useStyles","dispatch","useDispatch","deletePostFunc","_id","a","api","data","action","type","actions","payload","console","log","likePostFunc","message","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","fontSize","component","tags","map","tag","gutterBottom","CardContent","CardActions","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","posts","useSelector","state","length","Grid","container","item","xs","sm","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","find","p","useState","postData","setPostData","useEffect","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","newPost","createPost","TextField","name","label","value","onChange","event","target","required","fullWidth","split","multiline","rows","onDone","base64","appBar","heading","marginLeft","breakpoints","between","createMuiTheme","typography","fontFamily","join","App","get","ThemeProvider","Container","maxidth","AppBar","align","src","logo","alt","Grow","in","justify","combineReducers","filter","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDom","render","document","getElementById","module","exports","CREATE","FETCH_ALL","PATCH","DELETE"],"mappings":"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","file":"static/js/main.d7f262d0.chunk.js","sourcesContent":["//to handle front end side of api calls\r\nimport axios from 'axios';\r\n\r\nconst url = \"https://memories-clone-app.herokuapp.com/posts\"\r\n\r\nexport const fetchPosts = ()=>{\r\n     return axios.get(url)\r\n}\r\n\r\nexport const createPost = (newPost)=>{\r\n    return axios.post(`${url}/create`, newPost)\r\n}\r\n\r\nexport const updatePost = (id, updatedPost)=>{\r\n    return axios.patch(`${url}/${id}`, updatedPost)\r\n}\r\n\r\nexport const deletePost = (id)=>{\r\n    return axios.delete(`${url}/${id}`)\r\n}\r\n\r\nexport const likePost = (id)=>{\r\n    return axios.patch(`${url}/${id}/likePost`)\r\n}\r\n\r\n\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n});","import { Typography , Card, CardActions, CardContent , CardMedia, Button } from \"@material-ui/core\";\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\n\r\n\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { deletePost , likePost} from '../../../actions/posts'\r\n\r\nimport useStyles from './styles'\r\n\r\nconst Post = ({post , setCurrentId}) => {\r\n\r\n    const classes = useStyles()//apply styling \r\n    \r\n    const dispatch = useDispatch();//initialize redux to send actions\r\n\r\n    const deletePostFunc = ()=>{\r\n        dispatch(deletePost(post._id))\r\n    }\r\n\r\n    const likePostFunc = ()=>{\r\n        dispatch(likePost(post._id))\r\n    }\r\n\r\n    return ( \r\n        <Card className={classes.card}>\r\n            <CardMedia title = {post.title} image={post.selectedFile} className={classes.media}></CardMedia>\r\n            <div className = {classes.overlay}>\r\n                <Typography variant=\"h6\">{post.creator}</Typography>\r\n                <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n\r\n            </div>\r\n            <div className={classes.overlay2}>\r\n                <Button style={{ color: 'white' }} size=\"small\" onClick = {()=>{ setCurrentId(post._id) }}><MoreHorizIcon fontSize=\"default\" /></Button>\r\n            </div>\r\n            <div className={classes.details}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n            </div>\r\n            <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\r\n            <CardContent>\r\n            <Typography gutterBottom variant=\"body1\" component=\"h2\">{post.message}</Typography>\r\n            </CardContent>\r\n\r\n            <CardActions className={classes.cardActions}>\r\n                <Button size=\"small\" color=\"primary\" onClick={()=> likePostFunc()}><ThumbUpAltIcon fontSize=\"small\"/> Like {post.likeCount} </Button>\r\n                <Button size=\"small\" color=\"primary\"  onClick={()=> deletePostFunc()} ><DeleteIcon fontSize=\"small\"/> Delete</Button>\r\n            </CardActions>\r\n        </Card>\r\n     );\r\n}\r\n \r\nexport default Post;","import * as api from '../api'\r\nimport * as actions from '../constants/actionTypes'\r\n\r\n//actions are fired from the front end and are managed by redux\r\n//use api module to create actions for redux\r\nexport const getPosts = ()=> async(dispatch)=>{\r\n\r\n    try{\r\n        const {data} = await api.fetchPosts()\r\n        \r\n\r\n        const action = {\r\n            type : actions.FETCH_ALL,\r\n            payload : data\r\n        }\r\n\r\n        \r\n    dispatch(action)//redux thunk for async operations\r\n    \r\n    }\r\n    catch(e){\r\n        console.log(e.message)\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const createPost = (post)=> async(dispatch)=>{\r\n\r\n    try{\r\n        const {data} = await api.createPost(post)\r\n        \r\n\r\n        const action = {\r\n            type : actions.CREATE,\r\n            payload : data\r\n        }\r\n\r\n        \r\n    dispatch(action)//redux thunk for async operations\r\n    \r\n    }\r\n    catch(e){\r\n        console.log(e.message)\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const updatePost = (id, post)=> async(dispatch)=>{\r\n\r\n    try{\r\n\r\n        const {data} = await api.updatePost(id, post)\r\n        \r\n\r\n        const action = {\r\n            type : actions.PATCH,\r\n            payload : data\r\n        }\r\n\r\n        \r\n    dispatch(action)//redux thunk for async operations\r\n    \r\n    }\r\n    catch(e){\r\n        console.log(e.message)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const deletePost = (id)=> async(dispatch)=>{\r\n\r\n    try{\r\n\r\n        const {data} = await api.deletePost(id)\r\n        \r\n\r\n        const action = {\r\n            type : actions.DELETE,\r\n            payload : data\r\n        }\r\n\r\n        \r\n    dispatch(action)//redux thunk for async operations\r\n    \r\n    }\r\n    catch(e){\r\n        console.log(e)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const likePost = (id)=> async(dispatch)=>{\r\n\r\n    try{\r\n\r\n        const {data} = await api.likePost(id)\r\n        \r\n\r\n        const action = {\r\n            type : actions.PATCH,\r\n            payload : data\r\n        }\r\n\r\n        \r\n    dispatch(action)//redux thunk for async operations\r\n    \r\n    }\r\n    catch(e){\r\n        console.log(e.message)\r\n    }\r\n\r\n\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    margin : \"0\"\r\n   \r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: 'center',\r\n  },\r\n}));","import { Container, Grid, CircularProgress } from '@material-ui/core';\r\nimport Post from './Post/Post'\r\nimport { useSelector } from \"react-redux\" // access global store states\r\n\r\nimport useStyles from './styles'\r\n\r\nconst Posts = ({setCurrentId}) => {\r\n\r\n    const posts = useSelector(state => state.posts)\r\n    const classes = useStyles()//apply styling \r\n\r\n    return (\r\n        //conditional rendering to render spinner if no posts\r\n        !posts.length? <CircularProgress></CircularProgress> : (\r\n            <Grid className={classes.mainContainer} container alignItems = \"stretch\" spacing = {3}>\r\n\r\n                {\r\n                    posts.map((post)=>{\r\n                        console.log(\"map reached\")\r\n                        return <Grid item key={post._id} xs={12} sm={6}>\r\n\r\n                        <Post post = {post} setCurrentId = {setCurrentId}>\r\n\r\n                        </Post>\r\n\r\n                        </Grid>\r\n                    })\r\n                }\r\n\r\n            </Grid>\r\n        )\r\n\r\n\r\n        \r\n     );\r\n}\r\n \r\nexport default Posts;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin : \"1rem\"\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));","import { Typography, TextField, Paper, Button} from \"@material-ui/core\";\r\nimport { useState , useEffect } from 'react'\r\nimport FileBase from 'react-file-base64'\r\n\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { createPost, updatePost } from '../../actions/posts'\r\n\r\nimport useStyles from './styles'\r\n\r\nconst Form = ({currentId , setCurrentId}) => {\r\n\r\n    const classes = useStyles()//apply styling \r\n    const post = useSelector(state => currentId ? state.posts.find((p)=>p._id === currentId): null)//get post if currentid is not null\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    //post data state\r\n    const [postData, setPostData] = useState({\r\n        creator : \"\",\r\n        title : \"\",\r\n        message : \"\",\r\n        tags : \"\",\r\n        selectedFile : \"\"\r\n    })\r\n\r\n    //everytime the post changes, populate form \r\n    useEffect(() => {\r\n\r\n        if(post) setPostData(post)\r\n                \r\n        }, [currentId])\r\n\r\n    //dispatch action on submit\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        if(currentId){\r\n          dispatch(updatePost(currentId , postData))\r\n                \r\n        }else{\r\n          dispatch(createPost(postData))\r\n        }\r\n\r\n            clear()\r\n      };\r\n\r\n    //clear function to clear form data\r\n    const clear = ()=>{\r\n\r\n        setPostData({\r\n          creator : \"\",\r\n          title : \"\",\r\n          message : \"\",\r\n          tags : \"\",\r\n          selectedFile : \"\"\r\n      })\r\n\r\n      setCurrentId(null)\r\n    }\r\n    \r\n    return ( \r\n        <Paper className={classes.paper}>\r\n        <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n          <Typography variant=\"h6\">{ currentId ? 'Editing' :'Creating'} a blog</Typography>\r\n\r\n            <TextField \r\n            name=\"creator\" \r\n            variant=\"outlined\" \r\n            label=\"Creator\"\r\n            value = {postData.creator}\r\n            onChange = {(event)=>{\r\n                    setPostData({...postData , creator : event.target.value})\r\n            }} \r\n            required = {true}\r\n            fullWidth />\r\n\r\n            <TextField \r\n            name=\"title\" \r\n            variant=\"outlined\" \r\n            label=\"Title\"\r\n            value = {postData.title}\r\n            onChange = {(event)=>{\r\n                    setPostData({...postData , title : event.target.value})\r\n            }} \r\n            required = {true}\r\n            fullWidth />\r\n\r\n            <TextField \r\n            name=\"message\" \r\n            variant=\"outlined\" \r\n            label=\"Message\"\r\n            value = {postData.message}\r\n            onChange = {(event)=>{\r\n                    setPostData({...postData , message : event.target.value})\r\n            }}\r\n            required = {true}\r\n            fullWidth />\r\n\r\n            <TextField \r\n            name=\"tags\" \r\n            variant=\"outlined\" \r\n            label=\"Tags\"\r\n            value = {postData.tags}\r\n            onChange = {(event)=>{\r\n                    setPostData({...postData , tags : event.target.value.split(',')})\r\n            }} \r\n            fullWidth\r\n            multiline rows={4} />\r\n\r\n\r\n\r\n\r\n        \r\n\r\n\r\n          <div className={classes.fileInput}>\r\n              <FileBase\r\n              type = \"file\"\r\n              onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })}\r\n              required = {true}\r\n              >\r\n\r\n              </FileBase>\r\n          </div>\r\n          \r\n          <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n          <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick = {()=> clear()} fullWidth>Clear</Button>\r\n        </form>\r\n      </Paper>\r\n     );\r\n}\r\n \r\nexport default Form;","export default __webpack_public_path__ + \"static/media/logo.9cfa8a46.png\";","import {makeStyles} from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({ //theme is declared here\r\n\r\n\r\n    appBar: {\r\n      borderRadius: \"1rem\",\r\n      margin: '0.5rem',\r\n      padding : '0.5rem',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      border : 'solid 1px silver',\r\n      \r\n    },\r\n    heading: {\r\n      color: 'rgba(0,183,255, 1)',\r\n      fontSize : \"2rem\",\r\n    },\r\n    image: {\r\n      marginLeft: '.2rem',\r\n    },\r\n\r\n      //materialui media queries\r\n      [theme.breakpoints.between('sm' , 'md')] : {\r\n        mainContainer : {\r\n          flexDirection : \"column-reverse\"\r\n    \r\n        }\r\n    \r\n      },\r\n  \r\n  }));","import React, { useState, useEffect }from 'react';\r\nimport {Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\r\nimport Posts from './components/Posts/Posts'\r\nimport Form from './components/Form/Form'\r\n\r\nimport { getPosts }from './actions/posts'\r\nimport { useDispatch } from 'react-redux'\r\n\r\n\r\nimport logo from './images/logo.png'\r\nimport useStyles from './styles'\r\n\r\n//custom theme start\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      'Open Sans',\r\n      'sans-serif',\r\n    ].join(','),\r\n  },});\r\n\r\n  //custom theme end\r\n\r\n\r\nconst App = () => {\r\n\r\n    const classes = useStyles()//apply styling \r\n\r\n    //dispatch action creation to fetch all blogs\r\n    const dispatch = useDispatch();\r\n\r\n    const [currentId, setCurrentId] = useState(null)\r\n\r\n    //useeffect hook to get the posts and plug it into store\r\n    useEffect(() => {\r\n\r\n     dispatch(getPosts())\r\n\r\n    }, [dispatch , currentId])\r\n\r\n\r\n    return ( \r\n\r\n        <ThemeProvider theme = {theme}>\r\n                    <Container maxidth = \"lg\">\r\n            <AppBar className = {classes.appBar} position = \"static\" color = \"inherit\">\r\n            <Typography className = {classes.heading} variant = \"h2\" align = \"center\">Blog App</Typography>\r\n        <img className = {classes.image} src = {logo} alt = \"logo\" height = \"60\"></img>\r\n            </AppBar>\r\n\r\n\r\n\r\n            <Grow in>\r\n                <Container>\r\n                    <Grid container className = {classes.mainContainer} justify = \"space-between\" alignItems = \"stretch\" spacing = {3}>\r\n\r\n                    <Grid item xs={12} sm = {7}>\r\n                        <Posts setCurrentId = {setCurrentId} ></Posts>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm = {4}>\r\n                        <Form setCurrentId = {setCurrentId} currentId = {currentId}></Form>\r\n                    </Grid>\r\n\r\n                    </Grid>\r\n                </Container>\r\n            </Grow>\r\n        </Container>\r\n\r\n        </ThemeProvider>\r\n\r\n     );\r\n}\r\n \r\nexport default App;","import { combineReducers } from \"redux\";\r\n\r\nimport posts from \"./posts\"\r\n\r\nexport default combineReducers({\r\n    posts\r\n})","import * as actions from '../constants/actionTypes'\r\n\r\nexport default (posts = [],action)=>{ //reducers are functions that help process data called by apis and returns the new state\r\n    switch (action.type) {\r\n        case actions.FETCH_ALL:\r\n\r\n            return action.payload\r\n\r\n        case actions.CREATE:\r\n        \r\n            return [...posts , action.payload];\r\n\r\n        case actions.PATCH:\r\n\r\n            return  posts.map((post) => (post._id === action.payload._id ? action.payload : post));//find the outdated post and replaces it with the new post;\r\n        \r\n        case actions.DELETE:\r\n\r\n            return posts.filter((post)=> post._id !== action.payload._id)//returns posts array without the deleted post\r\n\r\n    \r\n        default:\r\n            return posts;\r\n          \r\n    }\r\n}\r\n","//front end related code\r\n\r\nimport React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\n//import root root component\r\nimport App from './App';\r\n\r\n//redux provided needed for global store\r\nimport {Provider} from 'react-redux';\r\nimport { createStore , applyMiddleware, compose }from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducers from './reducers'\r\n\r\n//global styles\r\nimport \"./index.css\";\r\n\r\n//initialize global store\r\nconst store = createStore( reducers , compose(applyMiddleware(thunk)))\r\n\r\n\r\n\r\nReactDom.render(\r\n<Provider store = {store}>\r\n    <App></App>\r\n</Provider> , document.getElementById('root'));\r\n","//file where all redux action constants are stored\r\nconst CREATE = 'CREATE'\r\nconst FETCH_ALL = 'FETCH_ALL'\r\nconst PATCH = 'PATCH'\r\nconst DELETE = 'DELETE'\r\n\r\nmodule.exports = {\r\n    CREATE,\r\n    FETCH_ALL,\r\n    PATCH,\r\n    DELETE   \r\n}"],"sourceRoot":""}